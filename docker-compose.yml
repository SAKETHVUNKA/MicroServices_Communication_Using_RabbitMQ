version: "3.8"

services:

  database:
    container_name: mysqldb
    build: ./database_service
    ports:
      - "3307:3306"  # Mapping container's MySQL port 3306 to host port 3307
    networks:
      - my-app-network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8-management
    ports:
      - "5672:5672"  # RabbitMQ messaging port
      - "15673:15672"  # RabbitMQ management UI port
    networks:
      - my-app-network

  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "8001:8000"
    networks:
      - my-app-network
    depends_on:
      - producer
    restart: on-failure

  producer:
    container_name: producer
    build: ./producer
    ports:
      - "5555:5000"
    networks:
      - my-app-network
    depends_on:
      - rabbitmq
    restart: on-failure

  consumer_one:
    container_name: healthcheck
    build: ./consumer_one
    networks:
      - my-app-network
    depends_on:
      - rabbitmq
    restart: on-failure

  consumer_two:
    container_name: additem
    build: ./consumer_two
    networks:
      - my-app-network
    depends_on:
      - rabbitmq
    restart: on-failure

  consumer_three:
    container_name: stock
    build: ./consumer_three
    networks:
      - my-app-network
    depends_on:
      - rabbitmq
    restart: on-failure

  consumer_four:
    container_name: order
    build: ./consumer_four
    networks:
      - my-app-network
    depends_on:
      - rabbitmq
    restart: on-failure

networks:
  my-app-network: 
    driver: bridge